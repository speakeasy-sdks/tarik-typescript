/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Customer } from "./customer";
import { Item } from "./item";
import { Payment } from "./payment";
import { Shipping } from "./shipping";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Represents full info about order
 */
export class Order extends SpeakeasyBase {
    /**
     * Format YYYY-MM-DD[T]HH:MM
     */
    @SpeakeasyMetadata()
    @Expose({ name: "created_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    createdAt: Date;

    /**
     * Represents info about order customer
     */
    @SpeakeasyMetadata()
    @Expose({ name: "customer" })
    @Type(() => Customer)
    customer: Customer;

    @SpeakeasyMetadata({ elemType: Item })
    @Expose({ name: "items" })
    @Type(() => Item)
    items: Item[];

    /**
     * This field could be numeric string
     */
    @SpeakeasyMetadata()
    @Expose({ name: "merchant_id" })
    merchantId: number;

    /**
     * This field could be numeric string
     */
    @SpeakeasyMetadata()
    @Expose({ name: "order_id" })
    orderId: number;

    /**
     * Represents info about order payment
     */
    @SpeakeasyMetadata()
    @Expose({ name: "payment" })
    @Type(() => Payment)
    payment: Payment;

    /**
     * Represents info about shipping order
     */
    @SpeakeasyMetadata()
    @Expose({ name: "shipping" })
    @Type(() => Shipping)
    shipping: Shipping;
}
